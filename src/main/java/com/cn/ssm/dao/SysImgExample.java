package com.cn.ssm.dao;

import java.util.ArrayList;
import java.util.List;

public class SysImgExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public SysImgExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andImgIdIsNull() {
            addCriterion("img_id is null");
            return (Criteria) this;
        }

        public Criteria andImgIdIsNotNull() {
            addCriterion("img_id is not null");
            return (Criteria) this;
        }

        public Criteria andImgIdEqualTo(Integer value) {
            addCriterion("img_id =", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdNotEqualTo(Integer value) {
            addCriterion("img_id <>", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdGreaterThan(Integer value) {
            addCriterion("img_id >", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("img_id >=", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdLessThan(Integer value) {
            addCriterion("img_id <", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdLessThanOrEqualTo(Integer value) {
            addCriterion("img_id <=", value, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdIn(List<Integer> values) {
            addCriterion("img_id in", values, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdNotIn(List<Integer> values) {
            addCriterion("img_id not in", values, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdBetween(Integer value1, Integer value2) {
            addCriterion("img_id between", value1, value2, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgIdNotBetween(Integer value1, Integer value2) {
            addCriterion("img_id not between", value1, value2, "imgId");
            return (Criteria) this;
        }

        public Criteria andImgSourceIsNull() {
            addCriterion("img_source is null");
            return (Criteria) this;
        }

        public Criteria andImgSourceIsNotNull() {
            addCriterion("img_source is not null");
            return (Criteria) this;
        }

        public Criteria andImgSourceEqualTo(String value) {
            addCriterion("img_source =", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceNotEqualTo(String value) {
            addCriterion("img_source <>", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceGreaterThan(String value) {
            addCriterion("img_source >", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceGreaterThanOrEqualTo(String value) {
            addCriterion("img_source >=", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceLessThan(String value) {
            addCriterion("img_source <", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceLessThanOrEqualTo(String value) {
            addCriterion("img_source <=", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceLike(String value) {
            addCriterion("img_source like", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceNotLike(String value) {
            addCriterion("img_source not like", value, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceIn(List<String> values) {
            addCriterion("img_source in", values, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceNotIn(List<String> values) {
            addCriterion("img_source not in", values, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceBetween(String value1, String value2) {
            addCriterion("img_source between", value1, value2, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgSourceNotBetween(String value1, String value2) {
            addCriterion("img_source not between", value1, value2, "imgSource");
            return (Criteria) this;
        }

        public Criteria andImgTypeIsNull() {
            addCriterion("img_type is null");
            return (Criteria) this;
        }

        public Criteria andImgTypeIsNotNull() {
            addCriterion("img_type is not null");
            return (Criteria) this;
        }

        public Criteria andImgTypeEqualTo(Integer value) {
            addCriterion("img_type =", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeNotEqualTo(Integer value) {
            addCriterion("img_type <>", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeGreaterThan(Integer value) {
            addCriterion("img_type >", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("img_type >=", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeLessThan(Integer value) {
            addCriterion("img_type <", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeLessThanOrEqualTo(Integer value) {
            addCriterion("img_type <=", value, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeIn(List<Integer> values) {
            addCriterion("img_type in", values, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeNotIn(List<Integer> values) {
            addCriterion("img_type not in", values, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeBetween(Integer value1, Integer value2) {
            addCriterion("img_type between", value1, value2, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("img_type not between", value1, value2, "imgType");
            return (Criteria) this;
        }

        public Criteria andImgParentidIsNull() {
            addCriterion("img_parentid is null");
            return (Criteria) this;
        }

        public Criteria andImgParentidIsNotNull() {
            addCriterion("img_parentid is not null");
            return (Criteria) this;
        }

        public Criteria andImgParentidEqualTo(Integer value) {
            addCriterion("img_parentid =", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidNotEqualTo(Integer value) {
            addCriterion("img_parentid <>", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidGreaterThan(Integer value) {
            addCriterion("img_parentid >", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("img_parentid >=", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidLessThan(Integer value) {
            addCriterion("img_parentid <", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidLessThanOrEqualTo(Integer value) {
            addCriterion("img_parentid <=", value, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidIn(List<Integer> values) {
            addCriterion("img_parentid in", values, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidNotIn(List<Integer> values) {
            addCriterion("img_parentid not in", values, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidBetween(Integer value1, Integer value2) {
            addCriterion("img_parentid between", value1, value2, "imgParentid");
            return (Criteria) this;
        }

        public Criteria andImgParentidNotBetween(Integer value1, Integer value2) {
            addCriterion("img_parentid not between", value1, value2, "imgParentid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_img
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_img
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}